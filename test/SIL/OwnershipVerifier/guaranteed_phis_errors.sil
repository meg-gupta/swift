class SuperKlass {}

class Klass : SuperKlass {}

struct WrapperStruct {
  var val: Klass
}

struct Wrapper1 {
  var val1: Wrapper2
}

struct Wrapper2 {
  var val2: Klass
}

sil @use_superklass : $@convention(thin) (@guaranteed SuperKlass) -> ()
sil @use_klass : $@convention(thin) (@guaranteed Klass) -> ()

sil [ossa] @test6 : $@convention(thin) (@in Klass) -> () {
bb0(%0 : $*Klass):
  %outer = load_borrow %0 : $*Klass
  br bb1 

bb1:
  %cast1 = unchecked_ref_cast %outer : $Klass to $SuperKlass
  br bb2(%cast1 : $SuperKlass)

bb2(%phi : @guaranteed $SuperKlass):
  end_borrow %outer : $Klass
  %func = function_ref @use_superklass : $@convention(thin) (@guaranteed SuperKlass) -> ()
  apply %func(%phi) : $@convention(thin) (@guaranteed SuperKlass) -> ()
  destroy_addr %0 : $*Klass
  %9999 = tuple()
  return %9999 : $()
}
sil [ossa] @test1 : $@convention(thin) (@owned WrapperStruct) -> () {
bb0(%0 : @owned $WrapperStruct):
  %b = begin_borrow %0 : $WrapperStruct
  %ex1 = struct_extract %b : $WrapperStruct, #WrapperStruct.val
  end_borrow %b : $WrapperStruct
  %func = function_ref @use_klass : $@convention(thin) (@guaranteed Klass) -> ()
  apply %func(%ex1) : $@convention(thin) (@guaranteed Klass) -> ()
  destroy_value %0  : $WrapperStruct
  %9999 = tuple()
  return %9999 : $()
}

sil [ossa] @test2 : $@convention(thin) (@owned Klass) -> () {
bb0(%0 : @owned $Klass):
  %outer = begin_borrow %0 : $Klass
  br bb1 

bb1:
  %cast1 = unchecked_ref_cast %outer : $Klass to $SuperKlass
  br bb2(%cast1 : $SuperKlass)

bb2(%phi : @guaranteed $SuperKlass):
  end_borrow %outer : $Klass
  %func = function_ref @use_superklass : $@convention(thin) (@guaranteed SuperKlass) -> ()
  apply %func(%phi) : $@convention(thin) (@guaranteed SuperKlass) -> ()
  destroy_value %0 : $Klass
  %9999 = tuple()
  return %9999 : $()
}

sil [ossa] @test3 : $@convention(thin) (@guaranteed Klass, @guaranteed Klass) -> () {
bb0(%0 : @guaranteed $Klass, %1 : @guaranteed $Klass):
  cond_br undef, bb1, bb2

bb1:
  %copy0 = copy_value %0 : $Klass
  %borrow0 = begin_borrow %copy0 : $Klass
  br bb3(%copy0 : $Klass, %borrow0 : $Klass)

bb2:
  %copy1 = copy_value %1 : $Klass
  %borrow1 = begin_borrow %copy1 : $Klass
  br bb3(%copy1 : $Klass, %borrow1 : $Klass)

bb3(%phi : @owned $Klass, %gphi : @guaranteed $Klass):
  %func = function_ref @use_klass : $@convention(thin) (@guaranteed Klass) -> ()
  apply %func(%phi) : $@convention(thin) (@guaranteed Klass) -> ()
  destroy_value %phi : $Klass
  end_borrow %gphi : $Klass
  %9999 = tuple()
  return %9999 : $()
}

sil [ossa] @test4 : $@convention(thin) (@owned Wrapper1, @owned Wrapper1) -> () {
bb0(%0 : @owned $Wrapper1, %1 : @owned $Wrapper1):
  %b1 = begin_borrow %0 : $Wrapper1
  cond_br undef, bb1, bb2

bb1:
  %ex1 = struct_extract %b1 : $Wrapper1, #Wrapper1.val1
  br bb3(%ex1 : $Wrapper2, %b1 : $Wrapper1)

bb2:
  end_borrow %b1 : $Wrapper1
  %b2 = begin_borrow %1 : $Wrapper1
  %ex2 = struct_extract %b2 : $Wrapper1, #Wrapper1.val1
  br bb3(%ex2 : $Wrapper2, %b2 : $Wrapper1)

bb3(%phi1 : @guaranteed $Wrapper2, %phi2 : @guaranteed $Wrapper1):
  %ex3 = struct_extract %phi1 : $Wrapper2, #Wrapper2.val2
  br bb4(%ex3 : $Klass, %phi2 : $Wrapper1)

bb4(%phi3 : @guaranteed $Klass, %phi4 : @guaranteed $Wrapper1):
  end_borrow %phi4 : $Wrapper1
  %f = function_ref @use_klass : $@convention(thin) (@guaranteed Klass) -> ()
  apply %f(%phi3) : $@convention(thin) (@guaranteed Klass) -> ()
  destroy_value %0 : $Wrapper1
  destroy_value %1 : $Wrapper1
  %9999 = tuple()
  return %9999 : $()
}

sil [ossa] @test5 : $@convention(thin) (@owned Klass) -> () {
bb0(%0 : @owned $Klass):
  %outer = begin_borrow %0 : $Klass
  br bb1 

bb1:
  %cast1 = unchecked_ref_cast %outer : $Klass to $SuperKlass
  br bb2(%cast1 : $SuperKlass)

bb2(%phi : @guaranteed $SuperKlass):
  destroy_value %phi : $SuperKlass
  end_borrow %outer : $Klass
  destroy_value %0 : $Klass
  %9999 = tuple()
  return %9999 : $()
}

sil [ossa] @test6 : $@convention(thin) (@in Klass) -> () {
bb0(%0 : $*Klass):
  %outer = load_borrow %0 : $*Klass
  br bb1 

bb1:
  %cast1 = unchecked_ref_cast %outer : $Klass to $SuperKlass
  br bb2(%cast1 : $SuperKlass)

bb2(%phi : @guaranteed $SuperKlass):
  end_borrow %outer : $Klass
  %func = function_ref @use_superklass : $@convention(thin) (@guaranteed SuperKlass) -> ()
  apply %func(%phi) : $@convention(thin) (@guaranteed SuperKlass) -> ()
  destroy_addr %0 : $*Klass
  %9999 = tuple()
  return %9999 : $()
}
