// RUN: %target-sil-opt -sil-inline-generics -enable-sil-verify-all -inline -function-signature-opts %s | %FileCheck %s

sil_stage canonical

import Builtin
import Swift

public protocol View {
}

class DynamicStorage {
}

final class ItemStorage<V> : DynamicStorage where V : View {
}

extension View {
  func dynamicStorage() -> DynamicStorage
}

sil @ItemStorage_init : $@convention(method) <V where V : View> (@in V, @owned ItemStorage<V>) -> @owned ItemStorage<V>

sil @ItemStorage_alloc_init : $@convention(method) <V where V : View> (@in V, @thick ItemStorage<V>.Type, @thick ItemStorage<V>.Type) ->  @owned ItemStorage<V> {
bb0(%0 : $*V, %1 : $@thick ItemStorage<V>.Type, %2: $@thick ItemStorage<V>.Type):
  debug_value %2: $@thick ItemStorage<V>.Type
  %3 = alloc_ref $ItemStorage<V>
  %4 = function_ref @ItemStorage_init : $@convention(method) <τ_0_0 where τ_0_0 : View> (@in τ_0_0, @owned ItemStorage<τ_0_0>) -> @owned ItemStorage<τ_0_0>
  %5 = apply %4<V>(%0, %3) : $@convention(method) <τ_0_0 where τ_0_0 : View> (@in τ_0_0, @owned ItemStorage<τ_0_0>) -> @owned ItemStorage<τ_0_0>
  return %5 : $ItemStorage<V>
}

